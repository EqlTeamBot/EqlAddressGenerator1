from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from faker import Faker

# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ª–æ–∫–∞–ª–∏
SUPPORTED_LOCALES = {
    'us': 'en_US',
    'uk': 'en_GB',
    'ru': 'ru_RU',
    'de': 'de_DE',
    'fr': 'fr_FR',
    'ae': 'en_US',       # –û–ê–≠ (–Ω–µ—Ç –ª–æ–∫–∞–ª–∏ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–π)
    'at': 'de_AT',       # –ê–≤—Å—Ç—Ä–∏—è
    'au': 'en_AU',       # –ê–≤—Å—Ç—Ä–∞–ª–∏—è
    'ba': 'en_US',       # –ë–æ—Å–Ω–∏—è (–Ω–µ—Ç ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º en)
    'be': 'fr_BE',       # –ë–µ–ª—å–≥–∏—è (–º–æ–∂–Ω–æ —Ç–∞–∫–∂–µ nl_BE)
    'bg': 'bg_BG',       # –ë–æ–ª–≥–∞—Ä–∏—è
    'ca': 'en_CA',       # –ö–∞–Ω–∞–¥–∞
    'ch': 'de_CH',       # –®–≤–µ–π—Ü–∞—Ä–∏—è
    'hk': 'en_US',       # –ì–æ–Ω–∫–æ–Ω–≥
    'cy': 'en_US',       # –ö–∏–ø—Ä (–Ω–µ—Ç –ª–æ–∫–∞–ª–∏ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º en)
    'cz': 'cs_CZ',       # –ß–µ—Ö–∏—è
    'es': 'es_ES',       # –ò—Å–ø–∞–Ω–∏—è
    'fi': 'fi_FI',       # –§–∏–Ω–ª—è–Ω–¥–∏—è
    'gr': 'el_GR',       # –ì—Ä–µ—Ü–∏—è
    'hr': 'hr_HR',       # –•–æ—Ä–≤–∞—Ç–∏—è
    'hu': 'hu_HU',       # –í–µ–Ω–≥—Ä–∏—è
    'il': 'en_US',       # –ò–∑—Ä–∞–∏–ª—å (–Ω–µ—Ç ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º en)
    'it': 'it_IT',       # –ò—Ç–∞–ª–∏—è
    'my': 'en_US',       # –ú–∞–ª–∞–π–∑–∏—è
    'nl': 'nl_NL',       # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã
    'no': 'no_NO',       # –ù–æ—Ä–≤–µ–≥–∏—è
    'nz': 'en_NZ',       # –ù–æ–≤–∞—è –ó–µ–ª–∞–Ω–¥–∏—è
    'pl': 'pl_PL',       # –ü–æ–ª—å—à–∞
    'pt': 'pt_PT',       # –ü–æ—Ä—Ç—É–≥–∞–ª–∏—è
    'ro': 'ro_RO',       # –†—É–º—ã–Ω–∏—è
    'rs': 'en_US',       # –°–µ—Ä–±–∏—è (–Ω–µ—Ç ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º en)
    'se': 'sv_SE',       # –®–≤–µ—Ü–∏—è
    'sg': 'en_US',       # –°–∏–Ω–≥–∞–ø—É—Ä
    'si': 'sl_SI',       # –°–ª–æ–≤–µ–Ω–∏—è
    'sk': 'sk_SK',       # –°–ª–æ–≤–∞–∫–∏—è
    'tr': 'tr_TR',       # –¢—É—Ä—Ü–∏—è
}

# –ö–æ–º–∞–Ω–¥–∞ /fake
async def fake_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    args = context.args

    if not args:
        await update.message.reply_text("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /fake [–∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã]\n–ù–∞–ø—Ä–∏–º–µ—Ä: /fake us")
        return

    country_code = args[0].lower()

    if country_code not in SUPPORTED_LOCALES:
        await update.message.reply_text("‚ùå –°—Ç—Ä–∞–Ω–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–¥—ã: " + ", ".join(SUPPORTED_LOCALES.keys()))
        return

    fake = Faker(SUPPORTED_LOCALES[country_code])

    fake_data = (
        f"üë§ –ò–º—è:  {fake.name()}\n"
        f"üè† –ê–¥—Ä–µ—Å:  {fake.address()}\n"
        f"üìÆ –ü–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å:  {fake.postcode()}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω:  {fake.phone_number()}"
    )

    await update.message.reply_text(fake_data)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    import os

    TOKEN = "8434706305:AAFGJ3NWORtUzgVTt0IlfCzFQDMWX_g7dUg"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("fake", fake_command))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()